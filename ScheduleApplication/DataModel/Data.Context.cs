//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScheduleApplication.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MyIntranetAppEntities : DbContext
    {
        public MyIntranetAppEntities()
            : base("name=MyIntranetAppEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
        public virtual DbSet<SystemLog> SystemLogs { get; set; }
        public virtual DbSet<tbl_AcademicsVideoHistory> tbl_AcademicsVideoHistory { get; set; }
        public virtual DbSet<tbl_AcademicsVideos> tbl_AcademicsVideos { get; set; }
        public virtual DbSet<tbl_AdminCategory> tbl_AdminCategory { get; set; }
        public virtual DbSet<tbl_AdminDocument> tbl_AdminDocument { get; set; }
        public virtual DbSet<tbl_AdministrationTracker> tbl_AdministrationTracker { get; set; }
        public virtual DbSet<tbl_AdministrationTrackerDocument> tbl_AdministrationTrackerDocument { get; set; }
        public virtual DbSet<tbl_AdministrationTrackerNotes> tbl_AdministrationTrackerNotes { get; set; }
        public virtual DbSet<tbl_AdministrationTrackerPurchase> tbl_AdministrationTrackerPurchase { get; set; }
        public virtual DbSet<tbl_AdministrationTrackerTask> tbl_AdministrationTrackerTask { get; set; }
        public virtual DbSet<tbl_AdminSubCategory> tbl_AdminSubCategory { get; set; }
        public virtual DbSet<tbl_Appointments> tbl_Appointments { get; set; }
        public virtual DbSet<tbl_AppointmentSlot> tbl_AppointmentSlot { get; set; }
        public virtual DbSet<tbl_AppraisalSetting> tbl_AppraisalSetting { get; set; }
        public virtual DbSet<tbl_AppraiseeDevelopmentTraning> tbl_AppraiseeDevelopmentTraning { get; set; }
        public virtual DbSet<tbl_AsqForm> tbl_AsqForm { get; set; }
        public virtual DbSet<tbl_AsqQuestions> tbl_AsqQuestions { get; set; }
        public virtual DbSet<tbl_AsqSubForm> tbl_AsqSubForm { get; set; }
        public virtual DbSet<tbl_Asset> tbl_Asset { get; set; }
        public virtual DbSet<tbl_Asset_MobileAllotment> tbl_Asset_MobileAllotment { get; set; }
        public virtual DbSet<tbl_AssetBrand> tbl_AssetBrand { get; set; }
        public virtual DbSet<tbl_AssetComponent> tbl_AssetComponent { get; set; }
        public virtual DbSet<tbl_AssetHistory> tbl_AssetHistory { get; set; }
        public virtual DbSet<tbl_AssetModel> tbl_AssetModel { get; set; }
        public virtual DbSet<tbl_AssetTranfer> tbl_AssetTranfer { get; set; }
        public virtual DbSet<tbl_AssetType> tbl_AssetType { get; set; }
        public virtual DbSet<tbl_AssetTypeComponent> tbl_AssetTypeComponent { get; set; }
        public virtual DbSet<tbl_AssignEmployeesToManager> tbl_AssignEmployeesToManager { get; set; }
        public virtual DbSet<tbl_att_master> tbl_att_master { get; set; }
        public virtual DbSet<tbl_att_master_doctor> tbl_att_master_doctor { get; set; }
        public virtual DbSet<tbl_bm_Asset> tbl_bm_Asset { get; set; }
        public virtual DbSet<tbl_bm_AssetDoument> tbl_bm_AssetDoument { get; set; }
        public virtual DbSet<tbl_bm_AssetTransfer> tbl_bm_AssetTransfer { get; set; }
        public virtual DbSet<tbl_bm_BreakDown> tbl_bm_BreakDown { get; set; }
        public virtual DbSet<tbl_bm_CheckList> tbl_bm_CheckList { get; set; }
        public virtual DbSet<tbl_bm_CheckListItem> tbl_bm_CheckListItem { get; set; }
        public virtual DbSet<tbl_bm_DailyRound> tbl_bm_DailyRound { get; set; }
        public virtual DbSet<tbl_bm_Doument> tbl_bm_Doument { get; set; }
        public virtual DbSet<tbl_bm_PreventiveMaintenance> tbl_bm_PreventiveMaintenance { get; set; }
        public virtual DbSet<tbl_bm_PreventiveMaintenance_CheckList> tbl_bm_PreventiveMaintenance_CheckList { get; set; }
        public virtual DbSet<tbl_bm_ShiftingRequest> tbl_bm_ShiftingRequest { get; set; }
        public virtual DbSet<tbl_bm_TeamSetup> tbl_bm_TeamSetup { get; set; }
        public virtual DbSet<tbl_Booking> tbl_Booking { get; set; }
        public virtual DbSet<tbl_Building> tbl_Building { get; set; }
        public virtual DbSet<tbl_CallCenterDepartment> tbl_CallCenterDepartment { get; set; }
        public virtual DbSet<tbl_Candidates> tbl_Candidates { get; set; }
        public virtual DbSet<tbl_CaseSheetRetrival> tbl_CaseSheetRetrival { get; set; }
        public virtual DbSet<tbl_Category> tbl_Category { get; set; }
        public virtual DbSet<tbl_CellPhoneRequest> tbl_CellPhoneRequest { get; set; }
        public virtual DbSet<tbl_CellPhoneRequestApprover> tbl_CellPhoneRequestApprover { get; set; }
        public virtual DbSet<tbl_cm_Canteen> tbl_cm_Canteen { get; set; }
        public virtual DbSet<tbl_cm_Category> tbl_cm_Category { get; set; }
        public virtual DbSet<tbl_cm_EmpOrders> tbl_cm_EmpOrders { get; set; }
        public virtual DbSet<tbl_cm_Item> tbl_cm_Item { get; set; }
        public virtual DbSet<tbl_cm_ItemCategory> tbl_cm_ItemCategory { get; set; }
        public virtual DbSet<tbl_cm_ItemMealType> tbl_cm_ItemMealType { get; set; }
        public virtual DbSet<tbl_cm_ItemTransfer> tbl_cm_ItemTransfer { get; set; }
        public virtual DbSet<tbl_cm_ItemTransferItem> tbl_cm_ItemTransferItem { get; set; }
        public virtual DbSet<tbl_cm_MealType> tbl_cm_MealType { get; set; }
        public virtual DbSet<tbl_cm_Payment> tbl_cm_Payment { get; set; }
        public virtual DbSet<tbl_cm_ReceivedStock> tbl_cm_ReceivedStock { get; set; }
        public virtual DbSet<tbl_cm_ReceivedStockItem> tbl_cm_ReceivedStockItem { get; set; }
        public virtual DbSet<tbl_cm_Store> tbl_cm_Store { get; set; }
        public virtual DbSet<tbl_cm_StoreEmp> tbl_cm_StoreEmp { get; set; }
        public virtual DbSet<tbl_cm_Transaction> tbl_cm_Transaction { get; set; }
        public virtual DbSet<tbl_cm_TransactionItem> tbl_cm_TransactionItem { get; set; }
        public virtual DbSet<tbl_cm_UnitType> tbl_cm_UnitType { get; set; }
        public virtual DbSet<tbl_cm_VendorMeal> tbl_cm_VendorMeal { get; set; }
        public virtual DbSet<tbl_cm_VendorMealRequest> tbl_cm_VendorMealRequest { get; set; }
        public virtual DbSet<tbl_cm_VendorMealRequestMealType> tbl_cm_VendorMealRequestMealType { get; set; }
        public virtual DbSet<tbl_cmp_Diet> tbl_cmp_Diet { get; set; }
        public virtual DbSet<tbl_cmp_DietMenu> tbl_cmp_DietMenu { get; set; }
        public virtual DbSet<tbl_cmp_OrderRequest> tbl_cmp_OrderRequest { get; set; }
        public virtual DbSet<tbl_cmp_OrderRequestAttendendent> tbl_cmp_OrderRequestAttendendent { get; set; }
        public virtual DbSet<tbl_cmp_OrderRequestAttendendentByPatient> tbl_cmp_OrderRequestAttendendentByPatient { get; set; }
        public virtual DbSet<tbl_cmp_OrderRequestByPatient> tbl_cmp_OrderRequestByPatient { get; set; }
        public virtual DbSet<tbl_Comment> tbl_Comment { get; set; }
        public virtual DbSet<tbl_CommonDepartment> tbl_CommonDepartment { get; set; }
        public virtual DbSet<tbl_CompOffEncash> tbl_CompOffEncash { get; set; }
        public virtual DbSet<tbl_Concession> tbl_Concession { get; set; }
        public virtual DbSet<tbl_ConsentForm> tbl_ConsentForm { get; set; }
        public virtual DbSet<tbl_CugList> tbl_CugList { get; set; }
        public virtual DbSet<tbl_DailyVisiting> tbl_DailyVisiting { get; set; }
        public virtual DbSet<tbl_DefaultShiftType> tbl_DefaultShiftType { get; set; }
        public virtual DbSet<tbl_Delegate> tbl_Delegate { get; set; }
        public virtual DbSet<tbl_Department> tbl_Department { get; set; }
        public virtual DbSet<tbl_DepartmentShifts> tbl_DepartmentShifts { get; set; }
        public virtual DbSet<tbl_DepartmentVsCategory> tbl_DepartmentVsCategory { get; set; }
        public virtual DbSet<tbl_DepartmentVsCommonDepartment> tbl_DepartmentVsCommonDepartment { get; set; }
        public virtual DbSet<tbl_DeviceInfo> tbl_DeviceInfo { get; set; }
        public virtual DbSet<tbl_Dms> tbl_Dms { get; set; }
        public virtual DbSet<tbl_DmsCategory> tbl_DmsCategory { get; set; }
        public virtual DbSet<tbl_Doctor> tbl_Doctor { get; set; }
        public virtual DbSet<tbl_Doctor_RegistrationFrom> tbl_Doctor_RegistrationFrom { get; set; }
        public virtual DbSet<tbl_DoctorPunchInOutEntries> tbl_DoctorPunchInOutEntries { get; set; }
        public virtual DbSet<tbl_DropdownValues> tbl_DropdownValues { get; set; }
        public virtual DbSet<tbl_Drug> tbl_Drug { get; set; }
        public virtual DbSet<tbl_DrugNicuReport> tbl_DrugNicuReport { get; set; }
        public virtual DbSet<tbl_EmpCounseling> tbl_EmpCounseling { get; set; }
        public virtual DbSet<tbl_EmpCounselingFamily> tbl_EmpCounselingFamily { get; set; }
        public virtual DbSet<tbl_EmployeeDetails> tbl_EmployeeDetails { get; set; }
        public virtual DbSet<tbl_EmpSchedule> tbl_EmpSchedule { get; set; }
        public virtual DbSet<tbl_EmpScheduleBreak> tbl_EmpScheduleBreak { get; set; }
        public virtual DbSet<tbl_EmrEntry> tbl_EmrEntry { get; set; }
        public virtual DbSet<tbl_Event> tbl_Event { get; set; }
        public virtual DbSet<tbl_EventManage> tbl_EventManage { get; set; }
        public virtual DbSet<tbl_EventManageDelegate> tbl_EventManageDelegate { get; set; }
        public virtual DbSet<tbl_EventManageDelegateMealType> tbl_EventManageDelegateMealType { get; set; }
        public virtual DbSet<tbl_EventManageDelegateMealTypeHistory> tbl_EventManageDelegateMealTypeHistory { get; set; }
        public virtual DbSet<tbl_EventManageDelegateMethod> tbl_EventManageDelegateMethod { get; set; }
        public virtual DbSet<tbl_EventManageDelegatePayment> tbl_EventManageDelegatePayment { get; set; }
        public virtual DbSet<tbl_EventManageMealType> tbl_EventManageMealType { get; set; }
        public virtual DbSet<tbl_EventManageMethod> tbl_EventManageMethod { get; set; }
        public virtual DbSet<tbl_EventManagePayment> tbl_EventManagePayment { get; set; }
        public virtual DbSet<tbl_FeedBack> tbl_FeedBack { get; set; }
        public virtual DbSet<tbl_FhNda> tbl_FhNda { get; set; }
        public virtual DbSet<tbl_Floor> tbl_Floor { get; set; }
        public virtual DbSet<tbl_FloorDepartment> tbl_FloorDepartment { get; set; }
        public virtual DbSet<tbl_FMUDataRetrieval> tbl_FMUDataRetrieval { get; set; }
        public virtual DbSet<tbl_GatePass> tbl_GatePass { get; set; }
        public virtual DbSet<tbl_GatePassAsset> tbl_GatePassAsset { get; set; }
        public virtual DbSet<tbl_Group> tbl_Group { get; set; }
        public virtual DbSet<tbl_Holiday> tbl_Holiday { get; set; }
        public virtual DbSet<tbl_HomePageVideos> tbl_HomePageVideos { get; set; }
        public virtual DbSet<tbl_Hr_Remainder> tbl_Hr_Remainder { get; set; }
        public virtual DbSet<tbl_Hr_RemainderAction> tbl_Hr_RemainderAction { get; set; }
        public virtual DbSet<tbl_Hr_RemainderLog> tbl_Hr_RemainderLog { get; set; }
        public virtual DbSet<tbl_Hr_RemainderType> tbl_Hr_RemainderType { get; set; }
        public virtual DbSet<tbl_JobsHistory> tbl_JobsHistory { get; set; }
        public virtual DbSet<tbl_KraReviewSheet> tbl_KraReviewSheet { get; set; }
        public virtual DbSet<tbl_KraReviewSheetOther> tbl_KraReviewSheetOther { get; set; }
        public virtual DbSet<tbl_Leave> tbl_Leave { get; set; }
        public virtual DbSet<tbl_LeaveType> tbl_LeaveType { get; set; }
        public virtual DbSet<tbl_LeaveUpdateHistory> tbl_LeaveUpdateHistory { get; set; }
        public virtual DbSet<tbl_Likes> tbl_Likes { get; set; }
        public virtual DbSet<tbl_Location> tbl_Location { get; set; }
        public virtual DbSet<tbl_locationlist> tbl_locationlist { get; set; }
        public virtual DbSet<tbl_ManageAllocation> tbl_ManageAllocation { get; set; }
        public virtual DbSet<tbl_ManageLeave> tbl_ManageLeave { get; set; }
        public virtual DbSet<tbl_MasterEmployeeDesignation> tbl_MasterEmployeeDesignation { get; set; }
        public virtual DbSet<tbl_MealType> tbl_MealType { get; set; }
        public virtual DbSet<tbl_NewUserAccessRequest> tbl_NewUserAccessRequest { get; set; }
        public virtual DbSet<tbl_NewUserRequestSubdepartment> tbl_NewUserRequestSubdepartment { get; set; }
        public virtual DbSet<tbl_Notification> tbl_Notification { get; set; }
        public virtual DbSet<tbl_NotificationLog> tbl_NotificationLog { get; set; }
        public virtual DbSet<tbl_NursingDetails> tbl_NursingDetails { get; set; }
        public virtual DbSet<tbl_NursingDetailsDocument> tbl_NursingDetailsDocument { get; set; }
        public virtual DbSet<tbl_Oracle_subdepts> tbl_Oracle_subdepts { get; set; }
        public virtual DbSet<tbl_OutSourceUser> tbl_OutSourceUser { get; set; }
        public virtual DbSet<tbl_Page> tbl_Page { get; set; }
        public virtual DbSet<tbl_Patient> tbl_Patient { get; set; }
        public virtual DbSet<tbl_PatientBill> tbl_PatientBill { get; set; }
        public virtual DbSet<tbl_PatientBillItem> tbl_PatientBillItem { get; set; }
        public virtual DbSet<tbl_Payment> tbl_Payment { get; set; }
        public virtual DbSet<tbl_PerfomanceReview> tbl_PerfomanceReview { get; set; }
        public virtual DbSet<tbl_Permission> tbl_Permission { get; set; }
        public virtual DbSet<tbl_Place> tbl_Place { get; set; }
        public virtual DbSet<tbl_Post> tbl_Post { get; set; }
        public virtual DbSet<tbl_Protocol> tbl_Protocol { get; set; }
        public virtual DbSet<tbl_Purchase> tbl_Purchase { get; set; }
        public virtual DbSet<tbl_PurchaseItem> tbl_PurchaseItem { get; set; }
        public virtual DbSet<tbl_ReportingManager> tbl_ReportingManager { get; set; }
        public virtual DbSet<tbl_RequestCompOffLeave> tbl_RequestCompOffLeave { get; set; }
        public virtual DbSet<tbl_Roaster> tbl_Roaster { get; set; }
        public virtual DbSet<tbl_Room> tbl_Room { get; set; }
        public virtual DbSet<tbl_Settings> tbl_Settings { get; set; }
        public virtual DbSet<tbl_SettingsResponse> tbl_SettingsResponse { get; set; }
        public virtual DbSet<tbl_Share> tbl_Share { get; set; }
        public virtual DbSet<tbl_ShiftType> tbl_ShiftType { get; set; }
        public virtual DbSet<tbl_SubComment> tbl_SubComment { get; set; }
        public virtual DbSet<tbl_subdepartment> tbl_subdepartment { get; set; }
        public virtual DbSet<tbl_Survey> tbl_Survey { get; set; }
        public virtual DbSet<tbl_SurveyResult> tbl_SurveyResult { get; set; }
        public virtual DbSet<tbl_Task> tbl_Task { get; set; }
        public virtual DbSet<tbl_TaskApprove> tbl_TaskApprove { get; set; }
        public virtual DbSet<tbl_TaskApproverMaster> tbl_TaskApproverMaster { get; set; }
        public virtual DbSet<tbl_TaskAutoAssignSetting> tbl_TaskAutoAssignSetting { get; set; }
        public virtual DbSet<tbl_TaskCallcenter> tbl_TaskCallcenter { get; set; }
        public virtual DbSet<tbl_TaskComment> tbl_TaskComment { get; set; }
        public virtual DbSet<tbl_TaskCpx> tbl_TaskCpx { get; set; }
        public virtual DbSet<tbl_TaskCpxDoument> tbl_TaskCpxDoument { get; set; }
        public virtual DbSet<tbl_TaskDoument> tbl_TaskDoument { get; set; }
        public virtual DbSet<tbl_TaskHistory> tbl_TaskHistory { get; set; }
        public virtual DbSet<tbl_TaskRemainderLogs> tbl_TaskRemainderLogs { get; set; }
        public virtual DbSet<tbl_TaskSLAUser> tbl_TaskSLAUser { get; set; }
        public virtual DbSet<tbl_TravelDesk> tbl_TravelDesk { get; set; }
        public virtual DbSet<tbl_TravelDeskTravel> tbl_TravelDeskTravel { get; set; }
        public virtual DbSet<tbl_User> tbl_User { get; set; }
        public virtual DbSet<tbl_User_History> tbl_User_History { get; set; }
        public virtual DbSet<tbl_User_YearWiseHistory> tbl_User_YearWiseHistory { get; set; }
        public virtual DbSet<tbl_UserAssertDocuments> tbl_UserAssertDocuments { get; set; }
        public virtual DbSet<tbl_UserAssets> tbl_UserAssets { get; set; }
        public virtual DbSet<tbl_UserGroup> tbl_UserGroup { get; set; }
        public virtual DbSet<tbl_usernotes> tbl_usernotes { get; set; }
        public virtual DbSet<tbl_ValetParking> tbl_ValetParking { get; set; }
        public virtual DbSet<tbl_VehicleRequest> tbl_VehicleRequest { get; set; }
        public virtual DbSet<tbl_VehicleRequestComment> tbl_VehicleRequestComment { get; set; }
        public virtual DbSet<tbl_Vendor> tbl_Vendor { get; set; }
        public virtual DbSet<tbl_Visitor> tbl_Visitor { get; set; }
        public virtual DbSet<AspNetUsersbacup> AspNetUsersbacups { get; set; }
        public virtual DbSet<tbl_TravelDeskApprover> tbl_TravelDeskApprover { get; set; }
        public virtual DbSet<tbl_TravelDeskDocument> tbl_TravelDeskDocument { get; set; }
    
        [DbFunction("MyIntranetAppEntities", "ufnGetEmployeesbymanager")]
        public virtual IQueryable<ufnGetEmployeesbymanager_Result> ufnGetEmployeesbymanager(string userid, Nullable<int> locid, Nullable<int> deptid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var locidParameter = locid.HasValue ?
                new ObjectParameter("locid", locid) :
                new ObjectParameter("locid", typeof(int));
    
            var deptidParameter = deptid.HasValue ?
                new ObjectParameter("deptid", deptid) :
                new ObjectParameter("deptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufnGetEmployeesbymanager_Result>("[MyIntranetAppEntities].[ufnGetEmployeesbymanager](@userid, @locid, @deptid)", useridParameter, locidParameter, deptidParameter);
        }
    
        public virtual ObjectResult<uspGetEmployeesSwep_Result> uspGetEmployeesSwep(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> locationid, Nullable<int> departmentid, Nullable<int> employeeid, Nullable<int> ismanager, Nullable<int> ishradmin, Nullable<int> isVendor, string ismanagerid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var locationidParameter = locationid.HasValue ?
                new ObjectParameter("locationid", locationid) :
                new ObjectParameter("locationid", typeof(int));
    
            var departmentidParameter = departmentid.HasValue ?
                new ObjectParameter("departmentid", departmentid) :
                new ObjectParameter("departmentid", typeof(int));
    
            var employeeidParameter = employeeid.HasValue ?
                new ObjectParameter("employeeid", employeeid) :
                new ObjectParameter("employeeid", typeof(int));
    
            var ismanagerParameter = ismanager.HasValue ?
                new ObjectParameter("ismanager", ismanager) :
                new ObjectParameter("ismanager", typeof(int));
    
            var ishradminParameter = ishradmin.HasValue ?
                new ObjectParameter("ishradmin", ishradmin) :
                new ObjectParameter("ishradmin", typeof(int));
    
            var isVendorParameter = isVendor.HasValue ?
                new ObjectParameter("isVendor", isVendor) :
                new ObjectParameter("isVendor", typeof(int));
    
            var ismanageridParameter = ismanagerid != null ?
                new ObjectParameter("ismanagerid", ismanagerid) :
                new ObjectParameter("ismanagerid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetEmployeesSwep_Result>("uspGetEmployeesSwep", fromdateParameter, todateParameter, locationidParameter, departmentidParameter, employeeidParameter, ismanagerParameter, ishradminParameter, isVendorParameter, ismanageridParameter);
        }
    
        public virtual ObjectResult<uspGetEmployeesSwepWithRoster_Result> uspGetEmployeesSwepWithRoster(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> locationid, Nullable<int> departmentid, Nullable<int> employeeid)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var locationidParameter = locationid.HasValue ?
                new ObjectParameter("locationid", locationid) :
                new ObjectParameter("locationid", typeof(int));
    
            var departmentidParameter = departmentid.HasValue ?
                new ObjectParameter("departmentid", departmentid) :
                new ObjectParameter("departmentid", typeof(int));
    
            var employeeidParameter = employeeid.HasValue ?
                new ObjectParameter("employeeid", employeeid) :
                new ObjectParameter("employeeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetEmployeesSwepWithRoster_Result>("uspGetEmployeesSwepWithRoster", fromdateParameter, todateParameter, locationidParameter, departmentidParameter, employeeidParameter);
        }
    
        public virtual ObjectResult<string> uspGetInchargeDetails(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetInchargeDetails", useridParameter);
        }
    
        public virtual ObjectResult<uspGetRoster_Result> uspGetRoster(string userId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> locationId, Nullable<int> departmentId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetRoster_Result>("uspGetRoster", userIdParameter, fromDateParameter, toDateParameter, locationIdParameter, departmentIdParameter);
        }
    
        public virtual int uspupdateshift(Nullable<int> shiftTypeId, Nullable<System.DateTime> shiftDate, string userId, string currentUser)
        {
            var shiftTypeIdParameter = shiftTypeId.HasValue ?
                new ObjectParameter("ShiftTypeId", shiftTypeId) :
                new ObjectParameter("ShiftTypeId", typeof(int));
    
            var shiftDateParameter = shiftDate.HasValue ?
                new ObjectParameter("ShiftDate", shiftDate) :
                new ObjectParameter("ShiftDate", typeof(System.DateTime));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var currentUserParameter = currentUser != null ?
                new ObjectParameter("currentUser", currentUser) :
                new ObjectParameter("currentUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspupdateshift", shiftTypeIdParameter, shiftDateParameter, userIdParameter, currentUserParameter);
        }
    }
}
