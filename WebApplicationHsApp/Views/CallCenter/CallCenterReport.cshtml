
@{
    ViewBag.Title = "CallCenterReport";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    var table = null;
    var totalTicketCount = 0;
    $(document).ready(function () {
        LoadLocations();
        $("#Ftxtfromdate").datepicker({
            changeMonth: true,
            changeYear: true,
            Edit: true,
            dateFormat: "dd/mm/yy",
            yearRange: "-30:+30",
            onSelect: function (dateText, inst) {
                $("#Ftxttodate").datepicker("option", "minDate",
                    $("#Ftxtfromdate").datepicker("getDate"));
            }
        });
        $("#Ftxttodate").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: "dd/mm/yy",
            yearRange: "-30:+30",
            Edit: true
        });
        BindCharts();
    });
    function BindCharts() {
        $.get("/CallCenter/GetCpxCountByCpxRelatedTo", function (data) {
            var dataforchart = [];
            var categoriesx = [];
            for (var i = 0; i < data.length; i++) {
                var localarray = [];
                categoriesx.push(data[i].Key);
                localarray.push(data[i].Key);
                localarray.push(data[i].Count);
                dataforchart.push(localarray)
            }
            Highcharts.chart('container', {
                chart: {
                    type: 'cylinder',
                    //options3d: {
                    //    enabled: true,
                    //    //alpha: 15,
                    //    //beta: 15,
                    //    //depth: 100,
                    //    //viewDistance: 25
                    //}
                },
                title: {
                    text: 'Requests Location'
                },
                xAxis: {
                    categories: categoriesx,
                    crosshair: true
                },
                plotOptions: {
                    series: {
                        //depth: 100,
                        colorByPoint: true
                    }
                },
                series: [{
                    data: dataforchart,
                    name: 'Related',
                    showInLegend: true
                }]
            });
        });
        $.get("/CallCenter/GetCpxCountByRequestForTheDepartment", function (data) {
            var dataforchart2 = [];
            for (var i = 0; i < data.length; i++) {
                var localarray = [];
                localarray.push(data[i].Key);
                localarray.push(data[i].Count);
                dataforchart2.push({
                    name: data[i].Key,
                    y: data[i].Count
                });
            }

            Highcharts.chart('container1', {
                chart: {
                    type: 'pie',
                    options3d: {
                        enabled: true,
                        alpha: 45,
                        beta: 0
                    }
                },
                title: {
                    text: 'Request For the Department'
                },
                tooltip: {
                    pointFormat: '{series.name}: <b>{point.percentage:.1f}</b>'
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        cursor: 'pointer',
                        depth: 35,
                        dataLabels: {
                            enabled: true,
                            format: '{point.name}'
                        }
                    }
                },
                series: [{
                    type: 'pie',
                    name: 'Department',
                    data: dataforchart2
                }]
            });
        });
        $.get("/CallCenter/GetCpxCountByProjectTitle", function (data) {
            var dataforchart1 = [];
            var categoriesx = [];
            for (var i = 0; i < data.length; i++) {
                var localarray = [];
                categoriesx.push(data[i].Key);
                localarray.push(data[i].Key);
                localarray.push(data[i].Count);
                dataforchart1.push(localarray)
            }
            Highcharts.chart('container2', {
                chart: {
                    type: 'cylinder',
                    //options3d: {
                    //    enabled: true,
                    //    //alpha: 15,
                    //    //beta: 15,
                    //    //depth: 100,
                    //    //viewDistance: 25
                    //}
                },
                title: {
                    text: 'Category'
                },
                xAxis: {
                    categories: categoriesx,
                    crosshair: true
                },
                plotOptions: {
                    series: {
                        //depth: 25,
                        colorByPoint: true
                    }
                },
                series: [{
                    data: dataforchart1,
                    name: 'Count',
                    showInLegend: true
                }]
            });
        });
    }
    function LoadLocations() {
        $.ajax({
            type: "POST",
            url: "/Common/GetLocations",
            //data: "id=",
            success: function (data) {
                var options = [];
                options.push('<option value="">- Select Location -</option>');
                for (var i = 0; i < data.length; i++) {
                    options.push('<option value="' + data[i].LocationId + '">' + data[i].LocationName + '</option>');
                }
                $("#LocationIdfilter").html(options.join(''));
            },
            error: function () {
                alert("error")
            }
        });
    }
    function LoadData() {
        table=   $('#tbl_report').dataTable({
            "bServerSide": true,
            "sAjaxSource": "/CallCenter/AjaxGetCallCenterReport",
            "bProcessing": true,
            "scrollX": true,
            "bDestroy": true,
            "aLengthMenu": [[10, 20, 30, 50, 100, 150, 200, -1], [10, 20, 30, 50, 100, 150, 200, "All"]],
            "aoColumns": [
                { "sName": "id" },
                { "sName": "Date" },
                { "sName": "locationId" },
                { "sName": "departmentId" },
                { "sName": "CreatedBy" },
                { "sName": "callStatus" },
                { "sName": "startDate" },
                { "sName": "endDate" },
                { "sName": "UserSignOff" }
            ],
            "fnServerParams": function (aoData) {
                aoData.push(
                    { "name": "fromdate", "value": $("#Ftxtfromdate").val() },
                    { "name": "todate", "value": $("#Ftxttodate").val() },
                    { "name": "locationid", "value": $("#LocationIdfilter").val() },
                    { "name": "departmentid", "value": $("#ddlassigndepartmenet").val() }
                );
            } ,
            "footerCallback": function (row, data, start, end, display) {
                //Get data here 
                debugger;
                console.log(data);
                //Do whatever you want. Example:
                var totalAmount = 0;
                for (var i = 0; i < data.length; i++) {
                    totalAmount += parseFloat(data[i][2]);
                }
                $("#totalRecords").text("Total Tickets : " + totalAmount);
            }
        });
        $("#tbl_report_length").addClass("col-md-6");
        $("#tbl_report_length").addClass("col-md-6");
       
    }
    function ExportExcel() {
        var id = 0;
        FromDate = $("#Ftxtfromdate").val();
        ToDate = $("#Ftxttodate").val();
        var url = '/CallCenter/ExportExcelCallCenter?FromDate=' + FromDate + '&ToDate=' + ToDate;
        if ($("#LocationIdfilter").val() != null && $("#LocationIdfilter").val() != "") {
          
            if ($("#LocationIdfilter").val() != null && $("#LocationIdfilter").val() != "")
                url += '&locationId=' + $("#LocationIdfilter").val();
            if ($("#ddlassigndepartmenet").val() != null && $("#ddlassigndepartmenet").val() != "")
                url += '&departmentid=' + $("#ddlassigndepartmenet").val();
        }
        window.location = url;
        //$("#Ftxtfromdate").val("");
        //$("#Ftxttodate").val("");
    }
    function LoadDepartment() {
        if ($("#LocationIdfilter").val() != null && $("#LocationIdfilter").val() != "") {
            $.ajax({
                type: "GET",
                url: "/CallCenter/GetDepartmentByLocation",
                data: "id=" + $("#LocationIdfilter").val(),
                success: function (data) {
                    var options = [];
                    options.push('<option value="">- Select Department -</option>');
                    for (var i = 0; i < data.length; i++) {
                        options.push('<option value="' + data[i].DepartmentId + '">' + data[i].DepartmentName + '</option>');
                    }
                    $("#ddlassigndepartmenet").html(options.join(''));
                },
                error: function () {
                    alert("error")
                }
            });
        }
    }
</script>
<div class="panel panel-default" style="min-height:500px;">
    <div class="panel-heading">Call Center Report</div>
    <div class="panel-body">
        <div class="row">
            <div class="col-md-6" style="border: solid 5px lightsteelblue;">
                <div id="container">

                </div>
            </div>
            <div class="col-md-6" style="border: solid 5px lightsteelblue;">
                <div id="container2">

                </div>
            </div>
            <div class="col-md-12" style="border: solid 5px lightsteelblue;">
                <div id="container1">

                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="col-md-2">
                <select class="form-control maxwidth" id="LocationIdfilter" onchange="LoadDepartment();"></select>
            </div>
            <div class="col-md-2">
                <select class="form-control maxwidth" id="ddlassigndepartmenet">
                    <option value="">Select Assign Department</option>
                </select>
            </div>
            <div class="form-group col-md-1">
                <input type="text" class="form-control" name="FromDate" autocomplete="off" placeholder="From Date" id="Ftxtfromdate" style="max-width:200px;" />
            </div>
            <div class="form-group col-md-1">
                <input type="text" class="form-control" name="ToDate" autocomplete="off" placeholder="To Date" id="Ftxttodate" style="max-width:200px;" />
            </div>

            <div class="form-group col-md-2">
                <button type="button" class="btn btn-sm btn-default" value="Export To Excel" onclick="ExportExcel();"><span class="glyphicon glyphicon-download" style="vertical-align:middle;"></span>&nbsp;Export To Excel</button>
                <button type="button" class="btn btn-sm btn-success" value="Go" onclick="LoadData();"><span class="glyphicon glyphicon-search" style="vertical-align:middle;"></span>&nbsp;Go</button>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <table class="table table-striped table-bordered nowrap" style="width:100%;" id="tbl_report">
                    <thead>
                        <tr style="background-color: #786C67;color: white;">
                            <th>Date</th>
                            <th>Location</th>
                            <th>Department</th>
                            <th>Total Tickets</th>
                            <th>Active Tickets</th>
                            <th>Closed within TAT</th>
                            <th>Out of TAT</th>
                            <th>2nd Level pending</th>
                            <th>3rd Level pending</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>

                <div>
                    <label style="font-size:larger;color:green;" id="totalRecords">
                    </label>
                </div>
            </div>
        </div>
    </div>
</div>

